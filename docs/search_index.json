[["index.html", "Open Education Resources for Data Science in Python Preface", " Open Education Resources for Data Science in Python Ravi Patel, Dominic DiSanto, Britney Stottlemeyer Preface University of Pittsburgh, School of Pharmacy Python Education Resource and Applied Use Cases Authors: Ravi Patel, Pharm D; Dominic DiSanto, MS; Britney Stottlemeyer, PharmD Contributors &amp; Collaborators: Rahim Merchant, PharmD; Priyan Lad, PharmD; Alex Rodriguez, MHIM; Ben Moore, PharmD; Version 0.03 Licensing information to be contributed "],["1--Introduction.html", "Chapter 1 Introduction 1.1 Use Cases 1.2 Resource Curation", " Chapter 1 Introduction This site contains didactic and applied materials to aid learn and practice Python, specifically for application in data science and machine learning. These materials target audiences with varying levels of comfort with Python, including first-time Python users learning and applying new skills or those with familiarity to practice and demonstrate their skills in relevant use-cases. Applied materials (including use cases and available data, either simulated or publicily hosted) are specifically tailored to business and/or clinical use-cases in pharmacy. . If you are a first-time user, the curated resources will contain information that will help you install Python and Jupyter Notebook via Anaconda and begin familiarizing yourself with Pythons syntax and data structures. Students more familiar with Python may jump into topic-specific resources as refreshers and references or even jump directly into simulated use cases to practice their skills in an applied scenario! Below are summaries of the two main arms of this repository: 1.1 Use Cases For purposes of this site and its underlying GitHub repository, a use case is defined as some data set and related tasks that were devloped in collaboration with industry partners. The data in these use cases is most often simulated data, with the data simulation specifically mirroring essential contents and structure to data seen in practice by our industry collaborators. Use Cases are briefly outlined and summarized in Chapter 4, and the subsections of Chapter 5 include the individual use cases. Each use case will contain a data set and/or linked or discussed, publicily available data set, an assignment or series of tasks to accomplish using the data, and an example walkthrough document in both R and Python (via Jupyter Notebook) that discusses an example solution to the proposed tasks. N.B. Walkthrough notebooks do not necessarily contain singularly correct solutions (or even necessarily the most concise or efficient) but simply present a method of solving each use cases specific tasks. We would love to hear and implement additional, relevant use cases from instructors, statisticians, pharmacists, and other analytics professionals! If you have a relevant use case you would be comfortable sharing, please visit following Google form and submit a brief proposal, describing your use case. 1.2 Resource Curation Chapter 3 of this book is solely a running list of relevant, Python resources. We hope that this list may serve as a quick reference for LinkedInLearning or YouTube lectures, written references, and/or other open-resource websites. Resources are organized according to various topics related to the Python for Data Management &amp; Analytics course (although these topics certainly extend to building competencies in Python for data science outside of the course as well)! "],["2--Resource-List.html", "Chapter 2 List of Curated Python &amp; Statistical Education Resources", " Chapter 2 List of Curated Python &amp; Statistical Education Resources 2.0.0.1 Python Courses Python Tutorial for Beginners (Link) Forbes Best Free online data science courses in 2019 (Link) Data Camp (Link) (Python plus more) Python Beginner Course - Breathe Code (Link) Coursera - Python Genomic Data Science Specialization (Link) Data Science Plus (Link) Impressive review of Stats Methods (Linear regression) Data Professor - Python search playlist (Link) Google Cloud Platform (Link) Coursera Machine Learning with Python (Link) Data Analysis with Python (Link) Specializations Python for Everybody Specialization - (Link) Applied Data Science with Python Specialization - (Link) Kaggle NR - good for introductory learners 2.0.0.2 General References/Resources: https://www.mastersindatascience.org/ https://pythonhealthcare.org/ https://datacarpentry.org/ Knowledge Tree - Pitt 2.0.0.3 LinkedIn Learning: Resources pending, currently contained mostly in ResourceSpreadsheet.MD 2.0.0.4 Others locations of information OHSU - Wiki that reviews other resources - Main page, Article list ICS Lab Tutors - Link Python Exercises The Ultimate Data Science Prerequisite Learning List - Link List of List 2.0.0.5 Statistics Materials: UTHealth - Biostatistics for the Clinician - Link Youtube - Brandon Fultz - Link Youtube Stats Quest - Josh Starmer - Link BMJ Statistics - Link * Kenyon - Biology (Link) Health Knowledge UK, Public Health Textbook, statistical methods section (Link) StatR Analysis - Which test to choose - (Link) Medium, Towards Data Science - Everything You Need To Know about Hypothesis Testing  Part II (Link) Concordia University - OER Statistics (Link) Open UMich Introduction to Statistics - Link) OER Hopkins Introduction to Biostatistics - (Link) 2.0.0.6 Books Clinical Data as the Basic Staple of Health Learning: Creating and Protecting a Public Good: Workshop Summary (HSLS) Neural Data Science : A Primer with MATLABÂ® and Python (HSLS) Python for Bioinformatics (HSLS) Python for Everybody - trinket Open book - (Link) Very easy to read 2.0.0.7 Assessments/Homework NHLBI Big Data Analysis Challenge - (Link) Introduction to VA Pharmacy Data Sources - (Link) 2.0.0.8 Data sets https://sleepdata.org/datasets https://www.icpsr.umich.edu/web/pages/ICPSR/index.html https://www.icpsr.umich.edu/web/instructors/biblio/resources Pediatric Intensive Care Data - (Link) Github example of prediction - (Link) NYU - public data sets (Link) Berkley - (Link) Synthetic EMR Data Set - http://www.emrbots.org/ R Bots Synthetic EMR Data Set - (Synthethic Mass) 2.0.0.9 Fun Reads/Videos Bringing AI to the Underserved Billions - (Link), Ted Talk 12 minutes How to keep human bias out of AI - (Link), Ted Talk 12 minutes Rayid Ghani - ONC Overview of HealthCare Data Analytics - (Link) 20 minutes Data Science in Healthcare, PyData NYC 2018 - (Link) BD2K - Exploratory Data Analysis - (Link) 60 minutes University of Virginia, Exploratory Data Analysis\" - (Link) 20 minutes HBR Articles tagged with Data - (Link) \"Use This Framework to Predict the Success of Your Big Data Project - (Link) Building a data science team - (Link) Python for Industry Pharmaceuticals and Healthcare - (Link) (4 minutes) Python vs R vs SAS, Simplilearn - (Link) (20 minutes) 2.0.0.10 Articles A Machine Learning Approach for the Detection and Characterization of Illicit Drug Dealers on Instagram: Model Evaluation Study - (Link) Python for language analysis A validation of machine learning-based risk scores in the prehospital setting - (Link) CHIME: COVID-19 Hospital Impact Model for Epidemics - (Link) Simulate Covid-19 in your area with Python  beyond SIR models (towardsdatascience.com) - (Link) HBR The Kinds of Data Scientist - (Link) Acquiring and Using Electronic Health Record Data (https://rethinkingclinicaltrials.org/) - (Link) A machine learning approach predicts future risk to suicidal ideation from social media data - (Link) A dataset quantifying polypharmacy in the United States - (Link) "],["3--Use-Case-Overview.html", "Chapter 3 Use Case Overview", " Chapter 3 Use Case Overview Each use case (including required data, tasks/assignment(s), and/or solutions) is included as a subsection of Chapter 3. The below table links to use cases and briefly summarizes the competencies/skills used/addressed in each use cases series of tasks. Use Case Competencies Pharmaceutical Treatment of PTSD &amp; Adverse Effects on Suicidal Behavior (See Chapter 3.1) Data wrangling/management, model fitting, classification Accessing the FDAs FAERS Data (See Chapter 3.2) Web/data scraping, data wrangling/management, joins/merging of data Stock-Outs in Dispensing Machines (via St. Jude) (See Chapter 3.3) Data wrangling/management Age &amp; BMI Comorbidity Risk Factors (See Chapter 3.4) Data wrangling/management; Cross-ploatform (Excel-Python-R) Identifying Overprescription in Dual Enrolled VA Patients 3.5 Pandas (general); Data merging; Matplotlib/Visualization (basic, general); Cleaning string data; Cleaning inconsistently coded data "],["3.1--PTSD-Use-Case.html", "3.1 Pharmaceutical Treatment of PTSD &amp; Adverse Effects on Suicidal Behavior", " 3.1 Pharmaceutical Treatment of PTSD &amp; Adverse Effects on Suicidal Behavior 3.1.1 Competencies Modules: 1 (Importing/Reading Data); 4 (Pandas Intro); 5 (Relational Data/Data Merging); 6 (Data Cleaning); Assorted Classification Modules Competencies: Pandas (general); Data merging; Matplotlib/Visualization (basic, general); Cleaning string data; Cleaning inconsistently coded data; Sci-kit learn; Model fitting and cross-validation; Various possible classification model algorithms 3.1.2 Materials/Data The below links lead to comma-delimited datasets to be used for the below assignment. Simply save the linked web pages (as csv files) once loaded. PTSD Research Cohort Possible Patients PTSD Data 3.1.3 Introduction The present use case uses a simulated data set of patients with PTSD and suicidal-ideation or suicidal-related behavior (SRB) outcome data. This data and use case are inspired by the work of Noah Delapaz and William Hor under Dr. Lirong Wang related to pharmaceutical treatment of PTSD and related, adverse suicidal ideation. In this use case, you will first be given a large list of patients and previous ICD-9 and ICD-10 diagnoses, within which you will identify a patient sample of interest with a diagnosis of PTSD (as if you were identifying a study sample in the early stages of a research project). After identifying your study sample of interest, you will use patient outcome and medication data to assess the effects of common PTSD-treatments on later diagnosis of PTSD and/or SRB. Steps will include data cleaning, exploratory data analysis, and model-building and evaluation as you work with this use case. 3.1.4 Cohort Identification The dataset PossiblePatients_ICD.csv contains a list of ~1,000 patients from a hypothetical electronic health record registry with various ICD-9 and ICD-10 diagnosis codes. We want to identify adult patients (18+) with a diagnosis of post-traumatic stress disorder. We will use the codes of 309.81, F43.10, F43.11, F43.12 to identify our diagnosis of interest. How many patients do you find in this data set that are eligible for your research study (i.e that meet this criteria)? 3.1.5 Tasks 3.1.5.1 Data Cleaning &amp; Exploratory Analysis Now we will work with the file PTSD_ResearchCohort.csv, a dataset of the 401 patients who were recruited and successfully completed our hypothetical study. A data dictionary is included below for reference: Data Dictionary Variable Description PTSD_Q1-PTSD_Q20 PTSD Questionnaire variables (see images below) describing presence of symptoms 6-months after study enrollment PHQ_Q9 Patient Health Questionnaire (or PHQ-9) question 9, which assessed presence of suicidality or ideation of suicide, also at 6-months after study enrollment Age Continuous (integer) age variable TimeFirstDiagnosis_Months Integer value. The number of months since the patients first diagnosis of PTSD AlcAbuse Binary variable, where 1 represents present alcohol abuse and 0 no alcohol abuse over the previous 6 months BeckAnxiety_BL Continuous measure ranging from 0-63, where higher values indicate greater presence and severity of anxiety symptoms IncomeCat Nominal categorical varible describing income category relative to the federal poverty line (described in the variables categories) SocialSupport Self-reported social support, with values ranging from 0 to 84, where higher values indicate higher self-reported social support PTSD_Rx Name of medication prescribed Import the research study data. We can assume that the patients in this data file are a sbuset of the eligible patients you identified above. How many patients that you identified in question 1 have available outcome data? How many were not recruited or have missing follow-up data (i.e. are not in this outcome data set)? Using the PTSD questionnaire vairiables, crate a binary PTSD diagnosis/outcome variable. The following links include useful resources the PTSD checklist and respective variable coding and a guide to the scoring and diagnosis of PTSD using this checklist, with relevant information included below in Figures 1A and 1B. Figure 1A Figure 1B Create a variable that identifies suicidal ideation as present or absent: See the following article as a reference describing the PHQ9 questions. The 9th question in PHQ9 is often used to assess suicidality, with any values &gt;1 (i.e. present symptom) indicating suicidal endorsement/ideation and is contained in your data set. Beyond the PTSD &amp; PHQ variables, examine the other variables in the data set, and their descriptions in the Data Dictionary above. For any categorical variables, create indicator/dummy variables. 3.1.5.2 Build your model Build a model on the training set predicting 6-month SRB and predicting 6-month PTSD diagnosis using the input features dentified in the data dictionary and that youve prepared in the data cleaning section above of age, time since earliest PTSD diagnosis, alcohol abuse, Beck Anxiety Inventory, alcohol abuse, income category, social support, and medication indicator variables. Select a modelling algorithm that allows you to examine feature importance. Assess the fit of both your models What medications are important in a predictive model of PTSD? Describe the relationship of each medication (generally) based on the level of evidence (say high or low) based on your interpretation of the results of your model. What type of model did you fit and what specific measure did you use in 3a to assess importance? List two other types of classification models and how you would assess feature importance for these different models. 3.1.6 Solutions Jupyter Notebook Walkthrough R/RMarkdown Walkthrough "],["3.2--FAERS-Use-Case.html", "3.2 Accessing the FDAs FAERS Data", " 3.2 Accessing the FDAs FAERS Data 3.2.1 Materials Solution Checker (see description in Assignment section below) 3.2.2 Competencies Modules: 1 (Importing/Reading Data); 4 (Pandas Intro); 5 (Relational Data/Data Merging); 6 (Data Cleaning) Competencies: Pandas (general); Data merging 3.2.3 Background Taken from the FDAs website: The FDA Adverse Event Reporting System (FAERS) is a database that contains adverse event reports, medication error reports and product quality complaints resulting in adverse events that were submitted to FDA. The database is designed to support the FDAs post-marketing safety surveillance program for drug and therapeutic biologic products. This use case involves accessing the FAERS data from the FDAs website. We will specifically only be interested in the tables related to the drugs involved in each reported event. We will also limit the assignment to a single medication to reduce the size of the data you will manipulate and export. The FAERS data source is a rich resource of much more information than is explored through this use case, and youre encouraged to examine the data outside of the task presented below! 3.2.4 Tasks The presented task for this assignment is intentionally very vague. The walkthrough Jupyter notebook and RMarkdown documents will discuss both the programmatic solution with coding examples and the data access for the FAERS data. You are encouraged to do your best to download, explore, access, etc. the data on your own as much as possible to create the final aggregate data set. Access the FDAs Adverse Events Reporting System Data (FAERS) data, and pull all drug events related to Phenytoin from the datas DRUGS files for fiscal year 2019 (or FY2019). Aggregate FY2019 data into a single xlsx data file titlted FY2019_Phenytoin_FAERS_Python.xlsx or FY2019_Phenytoin_FAERS_R.xlsx for each respective program. Please leave all columns/variables in the data set, only filtering rows/observations for adverse drug events related to Phenytoin. This data is publicily accessible, such that you can download and import the files from a local folder. As the data are publicily hosted, the following StackOverflow post may be useful to review to attempt extracting data directly from the FDAs website using the zipfile, requests, and io Python modules. The included Python script FAERS_SolutionCheck.py will check your supplied solutions for accuracy, by simply running the code: exec(open(AERS_SolutionCheck.py).read()) in your Jupyter notebook. 3.2.5 Solutions Jupyter Notebook Walkthrough RMarkdown Walkthrough "],["3.3--StJude-Use-Case.html", "3.3 Stock-Outs in Dispensing Machines (via St. Jude)", " 3.3 Stock-Outs in Dispensing Machines (via St. Jude) 3.3.1 Contributors: Special thanks to Ben Moore, PharmD and Alex Rodriguez, MS of St. Jude Childrens Research Hospital for their continued insight and feedback in the construction of this material 3.3.2 Materials/Data Medications.csv Neuro_Surgery_Transactions.csv Onc_Derm_Transactions.csv EmergencyDepartmentTransactions.csv 3.3.3 Introduction A stock-out can generally refer to inventory exhaustion from some dispensary. In large and/or busy hospital systems, stock-outs commonly occur in automated prescription dispensing machines. Stock-outs may bottleneck clinical services (with providers forced to wait for re-stocks of necessary medications) and often require technician time (and implicitly, money for the technicians time). Many medications may be understocked if they are a frequent, root cause of stock-outs. Space can be re-allotted within the machines, replacing rarely dispensed medications with those frequently responsible for stock-outs. One must also consider the possible necessity of stocking rarely used medications if necessary in emergency situations, dependent upon the needs of the department. In this use case, you will examine data from three automated dispensing machines, exploring what inventory changes can reduce the number of stock-outs, using one calendar year of transaction data. Youve been presented with five data sets: (1-3) with transactions from respective dispensing machines, (4) that outlines the department(s) primarily using each machine, and (5) that includes information about the use and emergency stocking status of a medication. Use any one of the transactional tables and the fourth, machine-to-department(s) crosswalk table to explore the data by following the below tasks: Data Dictionary Transactional Data Variable Description TransactionID Unique identifier for each transaction Machine Identifier of dispensing machine Day Date of transaction Medication Name of medication dispensed Type Type of transaction taking place, Withdrawal or Refill AmtRemaining Amount of medication in machine after transaction taking place Machines Data Variable Description Machine ID Identifier of machine, also present in transaction data sets Department/Location Relevant department(s) using each machine Medication Data Variable Description Medication Name, dose, and type of medication Note Primary use or relevant applications of medication Emergency Status Binary. Yes indicates that a medication must be stocked at all times 3.3.4 Tasks 3.3.4.1 Exploratory Data Analysis What variables exist in the transaction data? What are their distinct values and/or distributions (where respectively meaningful)? How would you define a stock-out in the presented data? How many stock-outs occurred in calendar year 2020 (CY2020) in your data set? List the distinct medications present in the data Do stock-outs ever occur when a medication has not been completely dispensed? 3.3.4.2 Inventory Analysis Define a stock-out as anytime a medication must be refilled, using the datas Type field. If this definition is different than that used above, how often do stock-outs occur in your data set? Plot the distribution of the number of stock-outs for medications in your data set What suggestions would you offer to reduce stock-out frequency "],["3.4--Age-and-BMI.html", "3.4 Age &amp; BMI Risk Factor Identification", " 3.4 Age &amp; BMI Risk Factor Identification 3.4.1 Materials/Data BMI_Data.xlsx BMI_Data_UPDATE.xlsx automate_data_check_bmi.py 3.4.2 Competencies Modules: 1 (Importing/Reading Data); 4 (Pandas Intro); 5 (Relational Data/Data Merging); 6 (Data Cleaning) Competencies: Pandas (general); Data merging; Data reading/importing and writing/exporting 3.4.3 Solution Notes 3.4.4 Solutions The following information may be useful to know prior to beginning work on this assessment. A workbook is included in this folder titled BMI_Solution_Excel.xlsx. This file contains one method of solving the tasks in Excel from the instructors. This workbook may be a useful reference for the Excel solution for the vlookup formulae contained in the solution sheets. The file also demonstrates the final format that your solutions must follow to be checked by the Python script detailed below. In an attempt to more easily allow you to check your solutions, this use case contains a Python script (automate_data_check_bmi.py) that will check your answers. Use of this script is not required, but simply supplied for your convenience. If you would not like to use this script, feel free to use the manual solutions supplied. For the script to check your solutions: - The columns in your solutions dataframes must be only include (and be named correctly) ID, PhoneNo, and Address - Your solution spreadsheets must be .xlsx files named BMI_Solution_Python, BMI_Solution_Excel, BMI_Solution_R, and BMI_Solution_Update with the tabs Criteria_1, Criteria_2, Criteria_3, and Criteria_4 - In supplying your answers using Excel, the submitted data must contain only those observations meeting the criteria, and not simply a list of all observations filtered for the criteria. The script can be run most easily by simply downloading and saving the .py script in the same folder as your solution files, original data, and solution notebook, and run the following line of code in a chunk: &gt; exec(open('automate_data_check_bmi.py').read()) The script will export a spreadsheet (.xlsx) file titled SolutionCheckResults.xlsx, with tabs for the Excel, Python, R, and Update solution spreadsheets youve created. The script works even in the absence of these scripts, so you can run the scripts to check your answer to any one of your solutions without having created all four files. 3.4.5 Tasks Working solely in Excel, calculate BMI for all patients, rounding the value to the hundredths. Create four tabs of patient IDs and contact information for patients that meet the following criteria. Save the spreadsheet of your four solution tabs as BMI_Solution_Excel.xlsx. The use of vlookup() or xlookup may be helpful! BMI &gt; 30 BMI &gt;= 35 BMI &gt;= 30 and Age &gt;= 60 BMI &gt;= 35 and Age &gt;= 60 Now, using Python, import the height &amp; weight data and the contact information from the BMI_Data.xlsx spreadsheets tabs. Calculate BMI using the formula BMI = [Weight (kg)] / [{Height (m)]^2 and round to the hundredths (np.round(..., 2)). Note that the supplied height value is given in centimeters. Repeat step 2 using R Youve now been supplied an updated patient list in the data set BMI_Data_UPDATE.xlsx. Using the same 4 criteria (and instructions noted in the Solutions section), identify the patient contact information for patients in this updated data set using your preferred method in R, Python, or Excel. 3.4.6 Solution(s) BMI_Solution_Excel.xlsx Jupyter Notebook Solution/Walkthrough RMarkdown Solution/Walkthrough "],["3.5--VA-Dual-Enrollment.html", "3.5 Identifying Overprescription in Dual Enrolled VA Patients", " 3.5 Identifying Overprescription in Dual Enrolled VA Patients 3.5.1 Materials/Data VA Data CMS Data 3.5.2 Competencies Modules: 1 (Importing/Reading Data); 4 (Pandas Intro); 5 (Relational Data/Data Merging); 6 (Data Cleaning); 7 (Data Visualization) Competencies: Pandas (general); Data merging; Matplotlib/Visualization (basic, general); Cleaning string data; Cleaning inconsistently coded data 3.5.3 Background This use cases borrows from both a publication and Presentation by Dr. Walid Gellad within Pittsburghs Veterans Affairs Hospital system. The simulated data emulates a simplified set of prescription data for Veterans Affairs (VA) and Center for Medicaid/Medicare Services (CMS) patients, with overlap of healthcare utiliation in both systems. You will work with this data to merge the VA and CMS data sources and identify prescription (and overprescription) of opioids by patients who utilize VA and both VA &amp; CMS healthcare systems. *Preface Notes &amp; Assumptions:** - Assume all buprenorphine medications are equivalent to buprenorphine tablets in the given reference table for morphine mg equivalents Data Dictionary Data Element VA Data Variable CMS Data Variable Patient ID Patient ID Patient ID Date of Hospital Visit/Encounter Visit date N/A Age at Visit/Encounter Age N/A Height at Visit/Encounter Height N/A Weight at Visit/Encounter Weight N/A Medication Name Medication Medication Dose (Daily) Medication Dose Medication Dose Unit of Medication Dose Medication Dose Unit Medication Dose Unit Length of Prescription Duration Medication Duration Value Medication Duration Unit of Time for Length of Prescription Duration Medication Duration Unit Duration Unit 3.5.4 Tasks 3.5.4.1 Data Cleaning &amp; Preparation Import CMS and VA data into your Jupyter Notebook Examine the data. Are the variables consistently names between the two data frames? Is the same information collected? What differences exist? Create opioid administration outcome variable of interest within both the VA and CMS data We want to simply capture whether a given patient was given an opioid, essentially whether that patients medication was an opioid or not. What could a variable that codes this information look like? Standardize coding of relevant variables within data frames and between VA and CMS data sources (Examine units and/or variables that may be included as a singular variable in one data set and as a pair or set of values in a different data set). Dose Value (by daily intake) Social Security Number (SSN) Medication Duration Identify total, daily intake of mg morphine equivalents A PDF of the Center for Medicare and Medicaid Services Conversion Factors Document and a screenshot (accessed 9/22/2020) included below for your reference. MG Morphine Equiv Chart Merge data frames together on common identifier (SSN) Create and indicator variable to identify individuals dually enrolled in VA and CMS healthcare systems. Create a sum variable for total mg-morphine-equivalents within dual-use patients 3.5.4.2 Exploratory Analysis &amp; Visualization How many patients are dual enrolled and how many were solely accessing VA healthcare resources? Visualize MME among patients using histograms and/or density curves: Separately for VA patient visits and CMS patient visits (using only VA and CMS prescriptions respectively) For dual-enrollment patients (using our MME total/sum variable created in Data Cleaning Step 8) Analyze the comparative visualizations (i.e. differences you do (or do not) see). What proportion of dual enrolled patients were prescribed an opioid? Similarly, what proportion of VA-only patients? What proportion of dual enrolled patients were prescribed an opioid during both their VA and CMS visits? Create a visual that illustrates this difference 3.5.4.3 Bonus Questions The below questions demonstrate additional skills that, while beyond the scope of building foundational Python competencies/skills, may be of interest to explore if you found the earlier assessment simple! Create a density plot of total mg morphine equivalents among dual-enrolled patients, among VA-only patients, and among CMS only patients. Shade in the plot for patients with greater-than-or-equal-to 120 mg morphine equivalents Hint: This StackOverflow post may be useful in extracting densities using scipy) 3.5.5 Solutions Jupyter Notebook Walkthrough RMarkdown Walkthrough Example SQL Script "]]
